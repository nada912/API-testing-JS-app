name: Node.js API Test

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4

    # Cache Node.js modules
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-build-
          ${{ runner.os }}-node-${{ matrix.node-version }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
      
    - run: npm install
    
    # Wait for MongoDB to be ready before running tests
    - name: Wait for MongoDB to be ready
      run: |
        until mongo --host localhost --eval "print('waiting for connection')" > /dev/null 2>&1; do
          echo "Waiting for MongoDB to be available..."
          sleep 3
        done
    
    - run: npm test
